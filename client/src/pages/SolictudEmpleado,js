import { useEffect, useState } from "react";
import axios from "axios";
import "../App.css";

function SolicitudesEmpleado() {
  const [solicitudes, setSolicitudes] = useState([]);

  const cargarSolicitudes = () => {
    axios.get("http://localhost:3001/solicitudes")
      .then(res => setSolicitudes(res.data))
      .catch(err => console.error(err));
  };

  useEffect(() => {
    cargarSolicitudes();
  }, []);

  const aprobarSolicitud = (id) => {
    axios.put(`http://localhost:3001/solicitudes/aprobar/${id}`, { empleado_id: 1 })
      .then(() => {
        alert("Solicitud aprobada");
        cargarSolicitudes();
      })
      .catch(err => console.error(err));
  };

  const rechazarSolicitud = (id) => {
    const motivo = prompt("¿Por qué deseas rechazar esta solicitud?");
    axios.put(`http://localhost:3001/solicitudes/rechazar/${id}`, { empleado_id: 1, motivo })
      .then(() => {
        alert("Solicitud rechazada");
        cargarSolicitudes();
      })
      .catch(err => console.error(err));
  };

  return (
    <div className="solicitud-container min-h-screen bg-gray-50 py-8 px-4">
      <div className="solicitud-card max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6">
        <h2 className="text-3xl font-bold text-gray-800 mb-6">Gestión de Solicitudes</h2>

        <table className="w-full border border-gray-300 rounded-lg overflow-hidden">
          <thead className="bg-indigo-600 text-white">
            <tr>
              <th className="p-3">ID</th>
              <th className="p-3">Usuario</th>
              <th className="p-3">Animal</th>
              <th className="p-3">Fecha</th>
              <th className="p-3">Estado</th>
              <th className="p-3">Acciones</th>
            </tr>
          </thead>
          <tbody>
            {solicitudes.length === 0 ? (
              <tr>
                <td colSpan="6" className="text-center py-6 text-gray-500">No hay solicitudes registradas</td>
              </tr>
            ) : (
              solicitudes.map(s => (
                <tr key={s.id} className="border-t hover:bg-gray-50">
                  <td className="p-3 text-center">{s.id}</td>
                  <td className="p-3 text-center">{s.usuario_nombre || "Desconocido"}</td>
                  <td className="p-3 text-center">{s.animal_nombre || "N/A"}</td>
                  <td className="p-3 text-center">{new Date(s.fecha_solicitud).toLocaleDateString()}</td>
                  <td className={`p-3 text-center font-semibold ${
                    s.estado === "Aprobada" ? "text-green-600" :
                    s.estado === "Rechazada" ? "text-red-600" :
                    "text-yellow-600"
                  }`}>
                    {s.estado}
                  </td>
                  <td className="p-3 text-center space-x-2">
                    {s.estado === "Pendiente" && (
                      <>
                        <button onClick={() => aprobarSolicitud(s.id)} className="bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600">
                          Aprobar
                        </button>
                        <button onClick={() => rechazarSolicitud(s.id)} className="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600">
                          Rechazar
                        </button>
                      </>
                    )}
                    {s.estado !== "Pendiente" && <span className="text-gray-500">Resuelta</span>}
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default SolicitudesEmpleado;
